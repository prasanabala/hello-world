pipeline {
    agent any
    tools {
        maven 'maven-3.6.3' 
    }
    environment {
        DATE = new Date().format('yy.M')
        TAG = "${DATE}.${BUILD_NUMBER}"
        scannerHome = tool name: 'sonar_scanner 2.8', type: 'hudson.plugins.sonar.SonarRunnerInstallation';
    }
    stages {
        stage ('Build') {
            steps {
                sh 'mvn clean package'
            }
        }
	    stage('SonarQube analysis') {
            steps {
                withSonarQubeEnv('SonarQube') {
                    sh "${scannerHome}/bin/sonar-scanner"
                }
            }
        }
        stage("Quality gate") {
            steps {
                waitForQualityGate abortPipeline: true
            }
        }
        stage('Docker Build') {
            steps {
                script {
                    docker.build("prasanabala123/superteam:4.0")
                }
            }
        }
	    stage('Pushing Docker Image to Dockerhub') {
            steps {
                script {
                    docker.withRegistry('https://registry.hub.docker.com', 'docker_credential') {
                        docker.image("prasanabala123/superteam:4.0").push()
                        docker.image("prasanabala123/superteam:4.0").push("latest")
                    }
                }
            }
        }
        stage('Deploy'){
            steps {
                sh "docker stop hello-world | true"
                sh "docker rm hello-world | true"
                sh "docker run --name hello-world -d -p 9003:8080 prasanabala123/superteam:4.0"
            }
        }
    }
}
